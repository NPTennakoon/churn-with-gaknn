/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frame4.java
 *
 * Created on Feb 12, 2015, 10:34:13 PM
 */
package gaknn.gui;

import gaknn.OptimizeKNN;
import gaknn.dataaccess.ParameterReader;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class Frame4 extends javax.swing.JFrame {

    private static GaknnFrame previous;
    public int NumEvolutions;
    public int Population;
//    private static int m_Mutation = 100;
//    private static double m_MinDoubleGeneVal = 0.0;
//    private static double m_MaxDoubleGeneVal = 10.0;
//    private static int m_MaxIntGeneVal = 10;
    private String DataFilePath;
    // private String TestFilePath = "E:\\Project\\TestFiles\\testsample.arff";
    private String TestFilePath;
    private String selectedTestSet;
    private String ParameterFile;
    private static OptimizeKNN MainFile;
    private static int weighttype = 0;

    /**
     * Creates new form Frame4
     */
    public Frame4(GaknnFrame main) {
        MainFile = new OptimizeKNN();
        previous = main;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTestOptions = new javax.swing.ButtonGroup();
        buttonGroupEvaluation = new javax.swing.ButtonGroup();
        parameterPanel = new javax.swing.JPanel();
        EvolutionsLabel = new javax.swing.JLabel();
        PopulationLabel = new javax.swing.JLabel();
        EvolutionCount = new javax.swing.JTextField();
        PopulationSize = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        TrainPanel = new javax.swing.JPanel();
        TestOpPanel = new javax.swing.JPanel();
        btnTrainSet = new javax.swing.JRadioButton();
        btnCV = new javax.swing.JRadioButton();
        btnPercentSplit = new javax.swing.JRadioButton();
        btnTestSet = new javax.swing.JRadioButton();
        numFolds = new javax.swing.JTextField();
        btnGetTestSet = new javax.swing.JButton();
        btnTrain = new javax.swing.JButton();
        btnTrainResults = new javax.swing.JButton();
        ProgressLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnNoWeight = new javax.swing.JRadioButton();
        btnBayesWeight = new javax.swing.JRadioButton();
        btnCCW = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        btnEvaluate = new javax.swing.JButton();
        ProgressLabelE = new javax.swing.JLabel();
        jLabelProgress = new javax.swing.JLabel();
        LabelEvalNotification = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnPredict = new javax.swing.JButton();
        btnTestResults = new javax.swing.JButton();
        ProgressLabelP = new javax.swing.JLabel();
        btnOpenUnkownFile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnLoadModel = new javax.swing.JButton();
        btnDone = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        buttonGroupTestOptions.add(btnTrainSet);
        buttonGroupTestOptions.add(btnCV);
        buttonGroupTestOptions.add(btnPercentSplit);
        buttonGroupTestOptions.add(btnTestSet);

        buttonGroupEvaluation.add(btnNoWeight);
        buttonGroupEvaluation.add(btnBayesWeight);
        buttonGroupEvaluation.add(btnCCW);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Prediction");

        parameterPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Set  Parameters"));

        EvolutionsLabel.setText("Number of Evolutions");

        PopulationLabel.setText("Size of the Population");

        EvolutionCount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EvolutionCountActionPerformed(evt);
            }
        });

        jButton2.setText("Help!");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout parameterPanelLayout = new javax.swing.GroupLayout(parameterPanel);
        parameterPanel.setLayout(parameterPanelLayout);
        parameterPanelLayout.setHorizontalGroup(
            parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PopulationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EvolutionsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addGap(57, 57, 57)
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PopulationSize)
                    .addComponent(EvolutionCount, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 251, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        parameterPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {EvolutionCount, PopulationSize});

        parameterPanelLayout.setVerticalGroup(
            parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parameterPanelLayout.createSequentialGroup()
                .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parameterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(parameterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(parameterPanelLayout.createSequentialGroup()
                                .addComponent(EvolutionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PopulationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(parameterPanelLayout.createSequentialGroup()
                                .addComponent(EvolutionCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PopulationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        parameterPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {EvolutionsLabel, PopulationLabel});

        parameterPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {EvolutionCount, PopulationSize});

        TrainPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Phase"));

        TestOpPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Options"));

        btnTrainSet.setText("Train Set");
        btnTrainSet.setSelected(true);

        btnCV.setText("Cross Validation");

        btnPercentSplit.setText("Percentage Split (66.66%)");

        btnTestSet.setText("Test Set");

        numFolds.setText("10");
        numFolds.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numFoldsActionPerformed(evt);
            }
        });

        btnGetTestSet.setText("Test Set...");
        btnGetTestSet.setToolTipText("Select a file from the same domain, with known class labels");
        btnGetTestSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetTestSetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TestOpPanelLayout = new javax.swing.GroupLayout(TestOpPanel);
        TestOpPanel.setLayout(TestOpPanelLayout);
        TestOpPanelLayout.setHorizontalGroup(
            TestOpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestOpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TestOpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTrainSet)
                    .addGroup(TestOpPanelLayout.createSequentialGroup()
                        .addComponent(btnCV)
                        .addGap(18, 18, 18)
                        .addComponent(numFolds, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                    .addComponent(btnPercentSplit)
                    .addGroup(TestOpPanelLayout.createSequentialGroup()
                        .addComponent(btnTestSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(btnGetTestSet)))
                .addContainerGap())
        );
        TestOpPanelLayout.setVerticalGroup(
            TestOpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TestOpPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTrainSet)
                .addGap(18, 18, 18)
                .addGroup(TestOpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCV)
                    .addComponent(numFolds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPercentSplit)
                .addGap(18, 18, 18)
                .addGroup(TestOpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTestSet)
                    .addComponent(btnGetTestSet))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        btnTrain.setText("Optimize ");
        btnTrain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrainActionPerformed(evt);
            }
        });

        btnTrainResults.setText("View Results");
        btnTrainResults.setToolTipText("This shows the goodness of the trained model.");
        btnTrainResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrainResultsActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Weighter Selector"));

        btnNoWeight.setText("No weight");
        btnNoWeight.setSelected(true);

        btnBayesWeight.setText("Baysiean Weights");

        btnCCW.setText("Class Confidence Weights");

        jButton1.setText("Get CPT Data");
        jButton1.setToolTipText("Please Click this button before using the Class Confidence Weights.");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBayesWeight)
                    .addComponent(btnNoWeight)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnCCW)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNoWeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBayesWeight)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCCW)
                    .addComponent(jButton1))
                .addGap(56, 56, 56))
        );

        btnEvaluate.setText("Evaluate");
        btnEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEvaluateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TrainPanelLayout = new javax.swing.GroupLayout(TrainPanel);
        TrainPanel.setLayout(TrainPanelLayout);
        TrainPanelLayout.setHorizontalGroup(
            TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TrainPanelLayout.createSequentialGroup()
                        .addComponent(TestOpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrainPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(TrainPanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(LabelEvalNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(TrainPanelLayout.createSequentialGroup()
                        .addComponent(btnTrain)
                        .addGap(32, 32, 32)
                        .addComponent(ProgressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEvaluate)
                        .addGap(18, 18, 18)
                        .addComponent(ProgressLabelE, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTrainResults)
                        .addGap(17, 17, 17))))
            .addGroup(TrainPanelLayout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabelProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(212, Short.MAX_VALUE))
        );
        TrainPanelLayout.setVerticalGroup(
            TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrainPanelLayout.createSequentialGroup()
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TestOpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TrainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(LabelEvalNotification, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTrainResults)
                    .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ProgressLabelE, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(TrainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnTrain)
                                .addComponent(btnEvaluate))
                            .addComponent(ProgressLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelProgress, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Prediction Phase"));

        btnPredict.setText("Predict Class Labels");
        btnPredict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPredictActionPerformed(evt);
            }
        });

        btnTestResults.setText("View Results");
        btnTestResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestResultsActionPerformed(evt);
            }
        });

        btnOpenUnkownFile.setText("Open File...");
        btnOpenUnkownFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenUnkownFileActionPerformed(evt);
            }
        });

        jLabel1.setText("Select the data file to predict the churners in a dataset");

        btnLoadModel.setText("Load Model");
        btnLoadModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadModelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                        .addComponent(btnTestResults)
                        .addGap(65, 65, 65))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnOpenUnkownFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(btnLoadModel)
                        .addGap(48, 48, 48)
                        .addComponent(btnPredict)
                        .addGap(37, 37, 37)
                        .addComponent(ProgressLabelP, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPredict)
                    .addComponent(ProgressLabelP, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenUnkownFile)
                    .addComponent(btnLoadModel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTestResults, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        btnDone.setText("Done!!!");
        btnDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoneActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 464, Short.MAX_VALUE)
                        .addComponent(btnDone)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(parameterPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(TrainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(parameterPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TrainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnDone))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EvolutionCountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EvolutionCountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EvolutionCountActionPerformed

    private void btnTrainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrainActionPerformed
        ProgressLabel.setText("please wait...");

        try {

            GaknnFrame inputdata = new GaknnFrame();

            NumEvolutions = Integer.parseInt(this.EvolutionCount.getText());
            Population = Integer.parseInt(this.PopulationSize.getText());

            //DataFilePath = "E:\\Project\\TestFiles\\" + GaknnFrame.relationName + ".arff";
            DataFilePath = GaknnFrame.arffFilePath; // relative path

//            ParameterFile = "E:\\Project\\TestFiles\\" + GaknnFrame.relationName + ".prm";
            ParameterFile = GaknnFrame.arffFolderPath + File.separator + GaknnFrame.relationName + ".prm"; //relative path

            MainFile.setparameters(NumEvolutions, Population, ParameterFile, DataFilePath, TestFilePath);
            System.out.println("ParameterFile" + ParameterFile);

            // OptimizeKNN.ReadData(DataFilePath);
            double[][] trainSet = OptimizeKNN.ReadTrainData(DataFilePath);
            int[] trainIndexFull = OptimizeKNN.ReadTrainIndex(DataFilePath);

            int weight_type = 0;

            if (btnNoWeight.isSelected()) {
                weight_type = 0;
            } else if (btnBayesWeight.isSelected()) {
                weight_type = 1;
            } else if (btnCCW.isSelected()) {
                weight_type = 2;
            }

//            testLabel.setText(Integer.toString((int) OptimizeKNN.m_ClassAttribIndex));
// set the weighttype according to the radiobutton action (no weight,bayesian weight,ccw)
            if (btnPercentSplit.isSelected()) {
                OptimizeKNN.createTrainingdataSets();
                OptimizeKNN.createTrainingdataSetsDouble(trainSet, trainIndexFull);
                OptimizeKNN.weightselector(OptimizeKNN.m_TrainingSetd, OptimizeKNN.m_TestSetd, OptimizeKNN.m_TestSetdIndex, OptimizeKNN.m_TrainingSetdIndex, weight_type);
                OptimizeKNN.runOptimization();

            } else if (btnCV.isSelected()) {
                //for using cross validation
                try {
                    // since we need a file to hold the output of crossValidate() which would be called here
                    // the outputcsvfile is then used by functions in OptimizeKNN.java
                    OptimizeKNN.outputcsvfile = OptimizeKNN.createOutputcsvFile();
                    OptimizeKNN.crossValidate(10, trainSet, weight_type, trainIndexFull);
                } catch (Exception ex) {
                    Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (btnTestSet.isSelected()) {
                //read another known data file and assign as the test set for optimization
                // TestFilePath="E:\\Project\\TestFiles\\" + selectedTestSet + ".arff";
                TestFilePath = GaknnFrame.arffFolderPath + File.separator + selectedTestSet + ".arff";//relative path

                OptimizeKNN.ReadDataSecondFile(TestFilePath);
                OptimizeKNN.useTestdataSet(TestFilePath, trainSet, trainIndexFull);
                OptimizeKNN.weightselector(OptimizeKNN.m_TrainingSetd, OptimizeKNN.m_TestSetd, OptimizeKNN.m_TestSetdIndex, OptimizeKNN.m_TrainingSetdIndex, weight_type);
                OptimizeKNN.runOptimization();

            } else {
                OptimizeKNN.useTrainingdataSet(trainSet, trainIndexFull);
                OptimizeKNN.weightselector(OptimizeKNN.m_TrainingSetd, OptimizeKNN.m_TestSetd, OptimizeKNN.m_TestSetdIndex, OptimizeKNN.m_TrainingSetdIndex, weight_type);
                OptimizeKNN.runOptimization();
            }//end else

        } catch (Exception ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        }
        ProgressLabel.setText("train process completed!");
    }//GEN-LAST:event_btnTrainActionPerformed

    private void numFoldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numFoldsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numFoldsActionPerformed

    private void btnTrainResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrainResultsActionPerformed
        //this.dispose();

        Frame5 jnext = new Frame5();
        jnext.setVisible(true);
    }//GEN-LAST:event_btnTrainResultsActionPerformed

    private void btnTestResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestResultsActionPerformed
        try {
            //this.dispose();
            Frame6 nextw = new Frame6();
            nextw.setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnTestResultsActionPerformed

    private void btnDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoneActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnDoneActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.dispose();
        previous.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnPredictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPredictActionPerformed
        try {
//            ParameterReader paramReader = new ParameterReader(m_Attributes, m_ParameterFile);
            OptimizeKNN.ReadData(DataFilePath);

            //get the file from file chooser
            double[][] trainSet = OptimizeKNN.ReadTrainData(DataFilePath);
            double[][] testSet = OptimizeKNN.ReadTestData(TestFilePath);
            int[] testIndex = OptimizeKNN.ReadTestIndex(TestFilePath);
            int[] trainIndex = OptimizeKNN.ReadTrainIndex(DataFilePath);
            try {
                OptimizeKNN.instanceWeighter(trainSet, testSet, testIndex, trainIndex, weighttype);
                OptimizeKNN.createPredictedSet(testSet);
                OptimizeKNN.churners(testSet);
            } catch (Exception ex) {
                Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (IOException ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        }
        ProgressLabelP.setText("prediction task completed!");
    }//GEN-LAST:event_btnPredictActionPerformed

    private void btnGetTestSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetTestSetActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setMultiSelectionEnabled(false);

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File dataFile = chooser.getSelectedFile();
                OptimizeKNN.ReadDataSecondFile(dataFile.getAbsolutePath());
                selectedTestSet = OptimizeKNN.fileReaderObjectSec.m_RelationName;
            } catch (IOException ex) {
                Logger.getLogger(GaknnFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnGetTestSetActionPerformed

    private void btnEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEvaluateActionPerformed

        try {
            OptimizeKNN.ReadData(DataFilePath);

            if (btnPercentSplit.isSelected()) {
                //TestFilePath = DataFilePath;
                LabelEvalNotification.setText("Please select a test file to evaluate...");
                return;
            } else if (btnCV.isSelected()) {
                //TestFilePath = DataFilePath;
                LabelEvalNotification.setText("Please select a test file to evaluate...");
                return;
            } else if (btnTestSet.isSelected()) {
                // TestFilePath = "E:\\Project\\TestFiles\\" + selectedTestSet + ".arff";
                TestFilePath = GaknnFrame.arffFolderPath + File.separator + selectedTestSet + ".arff";
                LabelEvalNotification.setText("");

                //instance weighting
                if (btnNoWeight.isSelected()) {
                    weighttype = 0;
                } else if (btnBayesWeight.isSelected()) {
                    weighttype = 1;
                } else if (btnCCW.isSelected()) {
                    weighttype = 2;
                }

                double[][] trainSet = OptimizeKNN.ReadTrainData(DataFilePath);
                double[][] testSet = OptimizeKNN.ReadTestData(TestFilePath);
                int[] testIndex = OptimizeKNN.ReadTestIndex(TestFilePath);
                int[] trainIndex = OptimizeKNN.ReadTrainIndex(DataFilePath);

                try {
                    this.ProgressLabelE.setText("instance weighting!");
                    ProgressLabelE.paintImmediately(ProgressLabelE.getVisibleRect());
                    OptimizeKNN.instanceWeighter(trainSet, testSet, testIndex, trainIndex, weighttype);

                    OptimizeKNN.createPredictedSet(testSet);
                    OptimizeKNN.churners(testSet);

                    ProgressLabelE.setText("evaluating predictions!");
                    ProgressLabelE.paintImmediately(ProgressLabelE.getVisibleRect());
                    OptimizeKNN.evalutePredictions(testIndex);

                } catch (Exception ex) {
                    Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
//                TestFilePath = DataFilePath;
                LabelEvalNotification.setText("Please select a test file to evaluate...");
                return;
            }

        } catch (IOException ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.ProgressLabelE.setText("evaluation completed!");
    }//GEN-LAST:event_btnEvaluateActionPerformed

    private void btnOpenUnkownFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenUnkownFileActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setMultiSelectionEnabled(false);
        String UnknownSet;

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                File dataFile = chooser.getSelectedFile();
                OptimizeKNN.ReadData(dataFile.getAbsolutePath());
                UnknownSet = OptimizeKNN.fileReaderObject.m_RelationName;

                // TestFilePath = "E:\\Project\\TestFiles\\" + UnknownSet + ".arff";
                TestFilePath = dataFile.getParent() + File.separator + UnknownSet + ".arff";//relative path
//                TestFilePath=dataFile.getAbsolutePath();
                System.out.println("TestFilePath : " + TestFilePath);

            } catch (IOException ex) {
                Logger.getLogger(GaknnFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnOpenUnkownFileActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            GetBayesForBN getbayes = new GetBayesForBN();
            getbayes.GetAllValues();
        } catch (IOException ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Frame4.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JOptionPane.showMessageDialog(this, "Set Parameters------\n"
                + "Number of Evolutons refer to iteration of GA\n"
                + "Size of population refers the amount of datapoints considered as the population in GA\n\n"
                + "Optimizing Phase --------------\n"
                + "Test Option:  Specifies the method to be used in training process\n\n"
                + "Weight Selector: Specifies the method to be used in weighinting the instances for better prediction\n\n"
                + "Optimize: Optimize the k value and calculate weights on attributes\n"
                + "Please select one option from 'Test Options' and one option from 'Weight Selector'\n"
                + "to use the Optimize feature. Defualt values could also be used.\n\n"
                + "Evaluate: Allows you to get the predicted values for the test files \n"
                + "created from trainging set/supplied test set\n"
                + "You can 'View Results' an adjust your settings to suit your goal.\n\n"
                + "Prediction Phase -------------------\n"
                + "Select a data file which you need to predict the class lable.\n"
                + "", "Help Information", 1);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnLoadModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadModelActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File("."));
        chooser.setMultiSelectionEnabled(false);
        String parameterfile;

        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {

            File dataFile = chooser.getSelectedFile();

            //get the file name with extension
            parameterfile = dataFile.getName();

            //get the file with path
            OptimizeKNN.m_ParameterFile = dataFile.getAbsolutePath();
            //to get only the file name// without extension
            parameterfile = parameterfile.substring(0, parameterfile.lastIndexOf("."));
            //  OptimizeKNN.ReadData(dataFile.getAbsolutePath());
            //parameterfile = OptimizeKNN.fileReaderObject.m_RelationName;

//                TestFilePath = "E:\\Project\\TestFiles\\" + UnknownSet + ".arff";
            DataFilePath = dataFile.getParent() + File.separator + parameterfile + ".arff";//relative path
//            DataFilePath="E:\\Project\\TestFiles\\trainsample.arff";

//            OptimizeKNN.m_ClassAttribIndex = 19;
            System.out.println("paramath" + OptimizeKNN.m_ParameterFile);
        }
    }//GEN-LAST:event_btnLoadModelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Frame4(previous).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EvolutionCount;
    private javax.swing.JLabel EvolutionsLabel;
    private javax.swing.JLabel LabelEvalNotification;
    private javax.swing.JLabel PopulationLabel;
    private javax.swing.JTextField PopulationSize;
    private javax.swing.JLabel ProgressLabel;
    private javax.swing.JLabel ProgressLabelE;
    private javax.swing.JLabel ProgressLabelP;
    private javax.swing.JPanel TestOpPanel;
    private javax.swing.JPanel TrainPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JRadioButton btnBayesWeight;
    private javax.swing.JRadioButton btnCCW;
    private javax.swing.JRadioButton btnCV;
    private javax.swing.JButton btnDone;
    private javax.swing.JButton btnEvaluate;
    private javax.swing.JButton btnGetTestSet;
    private javax.swing.JButton btnLoadModel;
    private javax.swing.JRadioButton btnNoWeight;
    private javax.swing.JButton btnOpenUnkownFile;
    private javax.swing.JRadioButton btnPercentSplit;
    private javax.swing.JButton btnPredict;
    private javax.swing.JButton btnTestResults;
    private javax.swing.JRadioButton btnTestSet;
    private javax.swing.JButton btnTrain;
    private javax.swing.JButton btnTrainResults;
    private javax.swing.JRadioButton btnTrainSet;
    private javax.swing.ButtonGroup buttonGroupEvaluation;
    private javax.swing.ButtonGroup buttonGroupTestOptions;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabelProgress;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField numFolds;
    private javax.swing.JPanel parameterPanel;
    // End of variables declaration//GEN-END:variables
}
