/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frame5.java
 *
 * Created on Feb 14, 2015, 1:11:32 PM
 */
package gaknn.gui;

import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author admin
 */
public class Frame5 extends javax.swing.JFrame implements TableModelListener {

    File fileed = new File("churns_Edited.csv");

    BufferedImage img = null;

    {
        try {
            img = ImageIO.read(new File("weightdistribution.png"));
        } catch (IOException ex) {
            Logger.getLogger(Frame5.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public static BufferedImage resize(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }

    BufferedImage dimg = resize(img, 500, 500);//resize the image to 100x100

    /**
     * Creates new form Frame5
     */
    public Frame5() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelWeight = new javax.swing.JPanel();
        imageWeight = new javax.swing.JLabel();
        panelFitness = new javax.swing.JPanel();
        imageFitness = new javax.swing.JLabel();
        panelAccuracy = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelEvaluate = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTabbedPane1.setToolTipText("");

        panelWeight.setToolTipText("This shows the contribution of each attribute to the final prediction. The higher the weight, the height the contriution it give for the Prediction.");

        imageWeight.setIcon(new javax.swing.ImageIcon(dimg));
        imageWeight.setPreferredSize(new java.awt.Dimension(700, 700));

        javax.swing.GroupLayout panelWeightLayout = new javax.swing.GroupLayout(panelWeight);
        panelWeight.setLayout(panelWeightLayout);
        panelWeightLayout.setHorizontalGroup(
            panelWeightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWeightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );
        panelWeightLayout.setVerticalGroup(
            panelWeightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelWeightLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageWeight, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Weight Distribution", panelWeight);

        panelFitness.setToolTipText("The stabilized the fitness value, the better the model is to predict. ");

        imageFitness.setIcon(new javax.swing.ImageIcon("fitnessdistribution.png"));

        javax.swing.GroupLayout panelFitnessLayout = new javax.swing.GroupLayout(panelFitness);
        panelFitness.setLayout(panelFitnessLayout);
        panelFitnessLayout.setHorizontalGroup(
            panelFitnessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFitnessLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(imageFitness, javax.swing.GroupLayout.PREFERRED_SIZE, 619, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        panelFitnessLayout.setVerticalGroup(
            panelFitnessLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFitnessLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(imageFitness, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fitness Distribution", panelFitness);

        jLabel1.setIcon(new javax.swing.ImageIcon("modelaccuracy.png"));

        javax.swing.GroupLayout panelAccuracyLayout = new javax.swing.GroupLayout(panelAccuracy);
        panelAccuracy.setLayout(panelAccuracyLayout);
        panelAccuracyLayout.setHorizontalGroup(
            panelAccuracyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccuracyLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(778, Short.MAX_VALUE))
        );
        panelAccuracyLayout.setVerticalGroup(
            panelAccuracyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccuracyLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(693, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Model Accuracy", panelAccuracy);

        try{
            File myfile2 = new File("churning.csv");
            MyTableModel mtm2 = new MyTableModel(myfile2);
            jTable2.setModel(mtm2);
            jTable2.getTableHeader();
            jTable2.setAutoCreateRowSorter(true);
            jTable2.getModel().addTableModelListener(this);
            jTable2.getCellEditor();
        }
        catch(IOException ex){
        }
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout panelEvaluateLayout = new javax.swing.GroupLayout(panelEvaluate);
        panelEvaluate.setLayout(panelEvaluateLayout);
        panelEvaluateLayout.setHorizontalGroup(
            panelEvaluateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
            .addGroup(panelEvaluateLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        panelEvaluateLayout.setVerticalGroup(
            panelEvaluateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEvaluateLayout.createSequentialGroup()
                .addComponent(jScrollPane2)
                .addGap(220, 220, 220)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        jTabbedPane1.addTab("Churners in the Evaluate Data", panelEvaluate);

        try{
            File myfile1 = new File("prediction_summary.csv");
            MyTableModel mtm1 = new MyTableModel(myfile1);
            jTable1.setModel(mtm1);
            jTable1.getTableHeader();
            jTable1.setAutoCreateRowSorter(true);
        }
        catch(IOException ex){
        }
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Predictions on Evaluate Data", jPanel2);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        try{
            FileReader reader = new FileReader("CorrelationData.txt");
            BufferedReader br = new BufferedReader(reader);
            jTextArea1.read(br, null);
            br.close();
            jTextArea1.requestFocus();
        } catch (IOException ex) {
        }
        jScrollPane3.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(303, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Correlation between Attributes", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 802, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame5().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel imageFitness;
    private javax.swing.JLabel imageWeight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel panelAccuracy;
    private javax.swing.JPanel panelEvaluate;
    private javax.swing.JPanel panelFitness;
    private javax.swing.JPanel panelWeight;
    // End of variables declaration//GEN-END:variables
  public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
        int column = e.getColumn();
        MyTableModel model = (MyTableModel) e.getSource();
        String columnName = model.getColumnName(column);
        Object data = model.getValueAt(row, column);
        //   jLabel2.setText(Integer.toString(row)+","+Integer.toString(column));

        try {
            model.writeCSV(fileed);
        } catch (IOException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }

        jLabel2.setText("The edited file automatically saved as churns_Edited.csv ");
    }
}
