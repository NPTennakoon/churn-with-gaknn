/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Frame6.java
 *
 * Created on Feb 15, 2015, 10:59:00 AM
 */
package gaknn.gui;

//import com.opencsv.CSVReader;
import au.com.bytecode.opencsv.CSVReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;

/**
 *
 * @author admin
 */
public class Frame6 extends javax.swing.JFrame implements TableModelListener {

    File myfile;
    File fileed = new File("churns_Edited.csv");
    FileReader myfilereader;
    JTable table;

//    public void CSVRead() throws IOException
//    {
//
//
//try {
//            myfile = new File("churning.csv");
//            myfilereader = new FileReader(myfile);
//            CSVReader reader = new CSVReader(myfilereader);
//            List<String[]> myEntries = null;
//try {
//            myEntries = reader.readAll();
//   } catch (IOException ex){
////System.out.println(""+ex.toString());
//}
//         String[][] rowData = myEntries.toArray(new String[0][]);
//            String[] columnNames = {"Column 1", "Column 2", "Column 3", "Column 4", "Column 5", "Column 6", "Column 7", "Column 8", "Column 9", "Column 10", "Column 11", "Column 12", "Column 13", "Column 14", "Column 15", "Column 16", "Column 17", "Column 18", "Column 19", "Column 20"};
//            //     System.out.println("rowdata :" + rowData[0][1]);
//            table = new javax.swing.JTable(rowData, columnNames);
//        } catch (FileNotFoundException ex) {
//           // System.out.println(""+ ex.toString());
//        }
//
//    }
    /**
     * Creates new form Frame6
     */
    public Frame6() throws IOException {
        // CSVRead();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelChurners = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        panelPredictions = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prediction Results");

        try{
            File myfile = new File("prediction_summary.csv");
            MyTableModel mtm = new MyTableModel(myfile);
            jTable1.setModel(mtm);
            jTable1.getTableHeader();
            jTable1.setAutoCreateRowSorter(true);
        }
        catch(IOException ex){
        }
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout panelChurnersLayout = new javax.swing.GroupLayout(panelChurners);
        panelChurners.setLayout(panelChurnersLayout);
        panelChurnersLayout.setHorizontalGroup(
            panelChurnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelChurnersLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
        panelChurnersLayout.setVerticalGroup(
            panelChurnersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelChurnersLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        //jScrollPane1.add(table);

        jTabbedPane1.addTab("View Summary", panelChurners);
        //panelChurners.add(table);

        jScrollPane2.setAutoscrolls(true);

        try{
            File myfile = new File("PredictedSet.csv");
            MyTableModel mtm = new MyTableModel(myfile);
            jTable2.setModel(mtm);
            jTable2.getTableHeader();
            jTable2.setAutoCreateRowSorter(true);
        }
        catch(IOException ex){
        }
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout panelPredictionsLayout = new javax.swing.GroupLayout(panelPredictions);
        panelPredictions.setLayout(panelPredictionsLayout);
        panelPredictionsLayout.setHorizontalGroup(
            panelPredictionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPredictionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelPredictionsLayout.setVerticalGroup(
            panelPredictionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPredictionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View All Predictions", panelPredictions);

        jScrollPane3.setAutoscrolls(true);

        try{
            File myfile = new File("churning.csv");
            MyTableModel mtm = new MyTableModel(myfile);
            jTable3.setModel(mtm);
            jTable3.getTableHeader();
            jTable3.setAutoCreateRowSorter(true);
            jTable3.getModel().addTableModelListener(this);
            jTable3.getCellEditor();
        }
        catch(IOException ex){
        }
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 741, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View Churners", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Frame6().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Frame6.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JPanel panelChurners;
    private javax.swing.JPanel panelPredictions;
    // End of variables declaration//GEN-END:variables

    public void tableChanged(TableModelEvent e) {
        int row = e.getFirstRow();
        int column = e.getColumn();
        MyTableModel model = (MyTableModel) e.getSource();
        String columnName = model.getColumnName(column);
        Object data = model.getValueAt(row, column);
        //   jLabel2.setText(Integer.toString(row)+","+Integer.toString(column));

        try {
            model.writeCSV(fileed);
        } catch (IOException ex) {
            Logger.getLogger(test.class.getName()).log(Level.SEVERE, null, ex);
        }

        jLabel1.setText("The edited file automatically saved as churns_Edited.csv ");
    }

}
